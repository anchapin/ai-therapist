# AI Therapist Debug Environment Dockerfile
FROM python:3.9-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    DEBUG_MODE=true \
    LOG_LEVEL=DEBUG

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    wget \
    ffmpeg \
    portaudio19-dev \
    libasound2-dev \
    libsndfile1-dev \
    libffi-dev \
    libssl-dev \
    pkg-config \
    # Audio system dependencies
    alsa-utils \
    # Debugging tools
    vim \
    nano \
    htop \
    strace \
    lsof \
    # Monitoring tools
    iotop \
    sysstat \
    # Network tools
    netcat-openbsd \
    telnet \
    # Cleanup
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .
COPY requirements-debug.txt .

# Create and activate virtual environment
RUN python -m venv /app/venv
ENV PATH="/app/venv/bin:$PATH"

# Upgrade pip and install requirements
RUN pip install --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r requirements-debug.txt

# Copy project files
COPY . .

# Create necessary directories
RUN mkdir -p /app/logs /app/reports /app/cache /app/test-artifacts

# Install the project in development mode
RUN pip install -e .

# Create debug scripts directory
RUN mkdir -p /app/scripts

# Set proper permissions
RUN chmod +x /app/scripts/*.sh 2>/dev/null || true

# Create non-root user for security
RUN useradd -m -u 1000 -s /bin/bash debuguser && \
    chown -R debuguser:debuguser /app
USER debuguser

# Expose ports for monitoring
EXPOSE 8080 8081 8082

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Default command
CMD ["/bin/bash"]